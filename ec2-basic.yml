---
  - name: Provision an instance on ec2
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    vars:
      instance_type: t2.micro
      security_group: ansible-webserver
      image: ami-47205e28
      keypair: ravikp
      region: ap-south-1
      count: 1
    
    tasks:
      - name: create a security group
        local_action:
          module: ec2_group
          name: "{{ security_group }}"
          description: "Security group for web servers"
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall
      
      - name: launch new ec2 instance
        local_action: ec2
                      group={{ security_group }}
                      instance_type={{ instance_type }}
                      image={{ image }}
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      exact_count=1
                      count_tag="ravi"                      
        register: ec2
      
      - name: add newly launched instance to the inventory
        local_action: lineinfile
                      dest='./hosts'
                      regexp={{ item.public_ip }} 
                      insertafter="[webserver]" line={{ item.public_ip }}
        with_items: "{{ec2.instances}}"

      - name: Wait for ssh to come up
        local_action: wait_for
                      host={{ item.public_ip }}
                      port=22
                      state=started
        with_items: "{{ec2.instances}}"
      
      - name: Add tag to instances
        local_action: ec2_tag
                      resource={{ item.id }}
                      region={{ region }}
                      state=present
        with_items: "{{ec2.instances}}"
        args:
          tags:
            Name: webserver

